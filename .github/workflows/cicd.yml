name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: [ubuntu-latest]
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: nightoutdb_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Java
        uses: actions/setup-java@main
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Build and Test
        run: mvn clean package
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/nightoutdb_test
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres
      - name: Docker Login
        run: |
          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
      - name: Docker Build
        run: |
          docker build -t zachholt/nightout-backend .

      - name: Push Image
        run: docker push zachholt/nightout-backend:latest



  deploy:
      needs:  build
      runs-on: [ec2-runner]
      steps:
        - name: Checkout
          uses: actions/checkout@main
          
        - name: Create Docker Network
          run: |
            sudo docker network create nightout-network || true
            
        - name: Start PostgreSQL Container
          run: |
            # Check if container exists and remove it if it does
            sudo docker rm -f nightout-postgres || true
            
            # Start PostgreSQL container
            sudo docker run -d \
              --name nightout-postgres \
              --network nightout-network \
              -e POSTGRES_DB=postgres \
              -e POSTGRES_USER=postgres \
              -e POSTGRES_PASSWORD=postgres \
              -v postgres-data:/var/lib/postgresql/data \
              -p 5432:5432 \
              postgres:14
              
        - name: Wait for PostgreSQL to be ready
          run: |
            # Wait for PostgreSQL to be ready
            for i in {1..30}; do
              if sudo docker exec nightout-postgres pg_isready -U postgres; then
                echo "PostgreSQL is ready!"
                break
              fi
              echo "Waiting for PostgreSQL to be ready... ($i/30)"
              sleep 2
            done
            
        - name: Initialize Database
          run: |
            # First create the database if it doesn't exist
            sudo docker exec nightout-postgres psql -U postgres -c "CREATE DATABASE nightoutdb;" || echo "Database may already exist, continuing..."
            
            # Then create database schema
            sudo docker exec nightout-postgres psql -U postgres -d nightoutdb -c "
            DROP SEQUENCE IF EXISTS user_id_seq;
            
            CREATE SEQUENCE IF NOT EXISTS user_id_seq
                INCREMENT 1
                START 1
                MINVALUE 1
                MAXVALUE 9223372036854775807
                CACHE 1;
                
            DROP TABLE IF EXISTS users CASCADE;
            
            CREATE TABLE IF NOT EXISTS users (
                id BIGINT NOT NULL DEFAULT nextval('user_id_seq'),
                name VARCHAR(255) NOT NULL,
                email VARCHAR(255) NOT NULL UNIQUE,
                password VARCHAR(255) NOT NULL,
                created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                profile_image VARCHAR(255),
                coordinates VARCHAR(255),
                CONSTRAINT users_pkey PRIMARY KEY (id)
            );"
            
        - name: Pull Docker Image
          run: |
            sudo docker pull zachholt/nightout-backend:latest
            
        - name: Remove Container
          run: |
            sudo docker rm -f nightout-backend || true
            
        - name: Run Docker Container
          run: |
            sudo docker run -d \
              --name nightout-backend \
              --network nightout-network \
              -e SPRING_DATASOURCE_URL=jdbc:postgresql://nightout-postgres:5432/nightoutdb \
              -e SPRING_DATASOURCE_USERNAME=postgres \
              -e SPRING_DATASOURCE_PASSWORD=postgres \
              -e SPRING_JPA_HIBERNATE_DDL_AUTO=none \
              -e SPRING_SQL_INIT_MODE=never \
              -p 8080:8080 \
              zachholt/nightout-backend:latest
              
        - name: Check Container Status
          run: |
            sleep 10
            sudo docker ps
            sudo docker logs nightout-backend --tail 50